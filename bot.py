import discord
from discord.ext import commands, tasks
from config import DISCORD_TOKEN, YOUTUBE_API_KEY, TWITCH_CLIENT_ID, TWITCH_CLIENT_SECRET, YOUTUBE_CHANNEL_ID1, YOUTUBE_CHANNEL_ID2, DISCORD_CHANNEL_LINKS_ID
from youtube import get_youtube_service
from twitch import get_twitch_client
from links import TWITCH_LINK, TIKTOK_LINK, YOUTUBE_LINK, CUTTINGYT_LINK, TGK_SUB_LINK, TGK_SERVER_LINK, TGK_MAIN_LINK

intents = discord.Intents.default()
intents.message_content = True
intents.members = True

bot = commands.Bot(command_prefix="!", intents=intents)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è YouTube –∏ Twitch –∫–ª–∏–µ–Ω—Ç–æ–≤
youtube = get_youtube_service(YOUTUBE_API_KEY)
twitch = get_twitch_client(TWITCH_CLIENT_ID, TWITCH_CLIENT_SECRET)

@bot.event
async def on_ready():
    print(f'–ë–æ—Ç {bot.user} –∑–∞–ø—É—â–µ–Ω!')

    # –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ñ–æ–Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á
    check_new_video1.start()
    print('–ó–∞–¥–∞—á–∞ –ø–æ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è–º –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –∑–∞–ø—É—â–µ–Ω–∞')
    check_new_video2.start()
    print('–ó–∞–¥–∞—á–∞ –ø–æ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è–º –Ω–∞—Ä–µ–∑–æ–∫ –∑–∞–ø—É—â–µ–Ω–∞')
    check_and_notify.start()
    print('–ó–∞–¥–∞—á–∞ –ø–æ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è–º –æ –Ω–∞—á–∞–ª–µ —Å—Ç—Ä–∏–º–∞ –∑–∞–ø—É—â–µ–Ω–∞')


#-------------------------------Discord----------------------------------------
# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ –≤—Å–µ—Ö –º–µ–¥–∏–π–Ω—ã—Ö —Å—Å—ã–ª–æ–∫
@bot.command()
async def links(ctx):
    message_TW = f"–°—Å—ã–ª–∫–∞ –Ω–∞ Twitch –∫–∞–Ω–∞–ª: {TWITCH_LINK}"
    await ctx.send(message_TW)
    message_YT = f"–°—Å—ã–ª–∫–∞ –Ω–∞ YouTube –∫–∞–Ω–∞–ª: {YOUTUBE_LINK}"
    await ctx.send(message_YT)
    message_YTC = f"–°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª —Å –Ω–∞—Ä–µ–∑–∫–∞–º–∏: {CUTTINGYT_LINK}"
    await ctx.send(message_YTC)
    message_TT = f"–°—Å—ã–ª–∫–∞ –Ω–∞ TikTok: {TIKTOK_LINK}"
    await ctx.send(message_TT)

# –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞ –¢–ì–ö –∫–∞–Ω–∞–ª–æ–≤
@bot.command()
async def tg(ctx):
    message_TGKM = f"–°—Å—ã–ª–∫–∞ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –¢–ì–ö: {TGK_MAIN_LINK}"
    await ctx.send(message_TGKM)
    message_TGKSUB = f"–°—Å—ã–ª–∫–∞ –Ω–∞ Sub-chat: {TGK_SUB_LINK}"
    await ctx.send(message_TGKSUB)

# –ö–æ–º–∞–Ω–¥–∞ –Ω–∞ —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ n
import random
@bot.command()
async def rand(ctx, max_n: int):
    number = random.randint(0, max_n)
    await ctx.send(f"–í—ã–ø–∞–≤—à–µ–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ {max_n}:\n{number}")

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∏ –≤—ã–¥–∞—á–∞ –Ω–∞—á–∞–ª—å–Ω–æ–π —Ä–æ–ª–∏
ROLE_NAME = "Pecus"
#ROLE_NAME = "Noobik"
@bot.event
async def on_member_join(member):
    message = f"–ü—Ä–∏–≤–µ—Ç {member.mention}, —Ä–∞–¥—ã –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –Ω–∞ –Ω–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ –∫—É–±–∏–∫–∏ –ª–æ—Å–∫–∏—á–∞!"
    channel = discord.utils.get(member.guild.text_channels, name="–æ—Å–Ω–æ–≤–Ω–æ–π")
    # channel = discord.utils.get(member.guild.text_channels, name="‚ïîü´£‚ñ∏pr-vsem-pr")
    await channel.send(message)
    role = discord.utils.get(member.guild.roles, name=ROLE_NAME)
    await member.add_roles(role)

# –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ maincraft
@bot.command()
async def server(ctx):
    message_TGKS = f"–°–µ—Ä–≤–µ—Ä –¥–ª—è –ø–æ–¥–ø–∏—â–∏–∫–æ–≤ –Ω–∞ Forge 1.20.1\n–°—Ç–∏–ª–∏—Å—Ç–∏–∫–∞: Frostpunk –∏ RP\n–ö—Ä—É–ø–Ω—ã–µ –º–æ–¥—ã: Create, TC, IE\n–°—Å—ã–ª–∫–∞ –Ω–∞ –¢–ì–ö —Å–µ—Ä–≤–µ—Ä–∞: {TGK_SERVER_LINK}"
    await ctx.send(message_TGKS)

@bot.command()
async def helps(ctx):
    message_ALL = f"–í—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n!links - —Å—Å—ã–ª–∫–∏ –Ω–∞ YT, TW, TT\n!tg - —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤—Å–µ –¢–ì–ö\n!server - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ Sub-—Å–µ—Ä–≤–µ—Ä–µ\n!rand x - –°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –¥–æ x"
    await ctx.send(message_ALL)

#-------------------------------YouTube----------------------------------------
# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ ID –≤–∏–¥–µ–æ
last_video_id1 = None
last_video_id2 = None

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤–∏–¥–µ–æ –Ω–∞ –∫–∞–Ω–∞–ª–µ
def get_latest_video(a):
    if a == 1:
        try:
            request = youtube.search().list(
                channelId = YOUTUBE_CHANNEL_ID1,
                part = 'snippet',
                order = 'date',
                maxResults = 1,
                type = 'video'
            )
            response = request.execute()
            #print("–û—Ç–≤–µ—Ç –æ—Ç YouTube API:", response)  # –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥
            if response['items']:
                item = response['items'][0]
                if item['id']['kind'] == 'youtube#video':  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≤–∏–¥–µ–æ
                    return item
            return None
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ YouTube API: {e}")
            return None
    elif a == 2:
        try:
            request = youtube.search().list(
                channelId = YOUTUBE_CHANNEL_ID2,
                part = 'snippet',
                order = 'date',
                maxResults = 1,
                type = 'video'
            )
            response = request.execute()
            # print("–û—Ç–≤–µ—Ç –æ—Ç YouTube API:", response)  # –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥
            if response['items']:
                item = response['items'][0]
                if item['id']['kind'] == 'youtube#video':  # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –≤–∏–¥–µ–æ
                    return item
            return None
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ YouTube API: {e}")
            return None

# –ü–µ—Ä–≤—ã–π —Ç–∞—Å–∫ –Ω–∞ –≤—ã—Ö–æ–¥ –≤–∏–¥–µ–æ –Ω–∞ –æ—Å–Ω–æ–≤–Ω–æ–º –∫–∞–Ω–∞–ª–µ
@tasks.loop(minutes=5)
async def check_new_video1():
    try:
        # print("–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –≤–∏–¥–µ–æ...")
        global last_video_id1

        latest_video = get_latest_video(1)
        if latest_video:
            # print(f"–ù–∞–π–¥–µ–Ω–æ –≤–∏–¥–µ–æ: {latest_video['snippet']['title']}")
            video_id = latest_video['id']['videoId']
            if video_id != last_video_id1:
                last_video_id1 = video_id

                video_title = latest_video['snippet']['title']
                video_url = f"https://www.youtube.com/watch?v={video_id}"
                message = f"**–ù–æ–≤–æ–µ –≤–∏–¥–µ–æ –Ω–∞ –∫–∞–Ω–∞–ª–µ loskych!**\n{video_title}\n{video_url}"

                channel = bot.get_channel(DISCORD_CHANNEL_LINKS_ID)
                if channel:
                    # print(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª {DISCORD_CHANNEL_LINKS_ID}...")
                    await channel.send(message)
                #else:
                    # print(f"–ö–∞–Ω–∞–ª —Å ID {DISCORD_CHANNEL_LINKS_ID} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–π –∑–∞–¥–∞—á–µ: {e}")

# –í—Ç–æ—Ä–æ–π —Ç–∞—Å–∫ –Ω–∞ –≤—ã—Ö–æ–¥ –Ω–∞—Ä–µ–∑–æ–∫
@tasks.loop(minutes=5)
async def check_new_video2():
    try:
        # print("–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–æ–≤—ã—Ö –≤–∏–¥–µ–æ...")
        global last_video_id2

        latest_video = get_latest_video(2)
        if latest_video:
            # print(f"–ù–∞–π–¥–µ–Ω–æ –≤–∏–¥–µ–æ: {latest_video['snippet']['title']}")
            video_id = latest_video['id']['videoId']
            if video_id != last_video_id2:
                last_video_id2 = video_id

                video_title = latest_video['snippet']['title']
                video_url = f"https://www.youtube.com/watch?v={video_id}"
                message = f"**–ù–æ–≤–æ–µ –≤–∏–¥–µ–æ –Ω–∞ –∫–∞–Ω–∞–ª–µ –Ω–∞—Ä–µ–∑–æ–∫!**\n{video_title}\n{video_url}"

                channel = bot.get_channel(DISCORD_CHANNEL_LINKS_ID)
                if channel:
                    # print(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª {DISCORD_CHANNEL_LINKS_ID}...")
                    await channel.send(message)
                #else:
                    # print(f"–ö–∞–Ω–∞–ª —Å ID {DISCORD_CHANNEL_LINKS_ID} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ —Ñ–æ–Ω–æ–≤–æ–π –∑–∞–¥–∞—á–µ: {e}")

#-------------------------------Twitch----------------------------------------

import requests
# –ü–æ–ª—É—á–µ–Ω–∏–µ OAuth —Ç–æ–∫–µ–Ω–∞ –¥–ª—è Twitch
def get_twitch_oauth_token():
    url = "https://id.twitch.tv/oauth2/token"
    params = {
        "client_id": TWITCH_CLIENT_ID,
        "client_secret": TWITCH_CLIENT_SECRET,
        "grant_type": "client_credentials"
    }
    response = requests.post(url, params=params)
    data = response.json()
    return data['access_token']
# –ü—Ä–æ–≤–µ—Ä–∫–∞, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ —Å—Ç—Ä–∏–º –Ω–∞ Twitch
def check_stream_status(oauth_token):
    url = f"https://api.twitch.tv/helix/streams?user_login=sclkoma"
    headers = {
        "Client-ID": TWITCH_CLIENT_ID,
        "Authorization": f"Bearer {oauth_token}"
    }
    response = requests.get(url, headers=headers)
    data = response.json()
    if data['data']:
        stream_info = data['data'][0]
        # print(f"–°—Ç—Ä–∏–º –Ω–∞—á–∞–ª—Å—è: {stream_info['title']}")
        return True, stream_info['title']
    else:
        # print(f"–°—Ç—Ä–∏–º –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω.")
        return False, None
# –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Discord
async def send_discord_notification(channel_id):
    channel = bot.get_channel(channel_id)
    if channel:
        await channel.send(f"–°—Ç—Ä–∏–º –Ω–∞—á–∞–ª—Å—è –Ω–∞ Twitch! –°—Å—ã–ª–∫–∞: {TWITCH_LINK}")
        # print(f"–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Discord –∫–∞–Ω–∞–ª: {channel_id}")
    else:
        print(f"–ö–∞–Ω–∞–ª —Å ID {channel_id} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –æ–ø–æ–≤–µ—â–µ–Ω–∏—è
status = False
@tasks.loop(minutes=1)
async def check_and_notify():
    global status
    oauth_token = get_twitch_oauth_token()
    stream_active, stream_title = check_stream_status(oauth_token)

    if stream_active and status == False:
        status = True
        channel = DISCORD_CHANNEL_LINKS_ID
        await send_discord_notification(channel)
    elif stream_active == 0:
        status = False

bot.run(DISCORD_TOKEN)